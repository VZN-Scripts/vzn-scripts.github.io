{"/":{"title":"About VZN-Scripts","data":{"":"Welcome to the VZN Scripts documentation!Here you will find all guides and documentation related to the scripts we offer.If you still have questions join our Discord and open a ticket: Discord InviteLink to our Tebex: https://vzn-scripts.tebex.io"}},"/vzn-notify":{"title":"VZN-NOTIFY","data":{"":"Simple notifications with beutiful UI\nPURCHASE","installation#Installation":"","download-the-newest-version-from-keymaster#Download the newest version from Keymaster":"","put-vzn-notify-in-your-server-resources-folder#Put vzn-notify in your server resources folder":"","add-ensure-vzn-notify-to-your-servercfg#Add ensure vzn-notify to your server.cfg":"","config#Config":"Configure it how do you want\nConfig = {}\n---@type boolean\nConfig.ignoreDuplicates = true -- if the same notification will be duplicated it won't show\n---@type keyof Positions\nConfig.defaultPosition = Positions['top-right'] -- positions.lua\n---@type 1 | 2 | 3 | 4\nConfig.defaultDesignType = 3 -- design type of notification (next page)\n---@type string\nConfig.defaultTitle = \"Notification\" -- default title of notification if it's nil\n---@type number in miliseconds\nConfig.defaultDuration = 5000 -- default duration of notification if it's nil\n---@type boolean\nConfig.debug = false -- all notification data will be printed in console","compatibility#Compatibility":"esx\nox_lib\nqb-core\nOr you can integrate this script from everything if you can"}},"/vzn-notify/Integration/esx":{"title":"ESX INTEGRATION","data":{"":"To integrate vzn-notify with esx framework do steps below!","disable-or-remove-esx_notify-from-your-server#Disable or remove esx_notify from your server":"After this step the script should automatically works, but if not do next steps!","go-to-es_extendedclientfunctionslua#Go to es_extended/client/functions.lua":"","find-function-called-esxshownotification#Find function called ESX.ShowNotification":"","replace-this-function-with-this-code-below#Replace this function with this code below":"function ESX.ShowNotification(message, notifyType, length)\n    exports['vzn-notify']:esxNotification(notifyType, length, message)\nend"}},"/vzn-notify/Integration/ox_lib":{"title":"OX_LIB INTEGRATION","data":{"":"To integrate vzn-notify with ox_lib do steps below!","go-to-ox_libresourceinterfaceclientnotifylua#Go to ox_lib/resource/interface/client/notify.lua":"","find-function-called-libnotify#Find function called lib.notify":"","replace-this-function-with-this-code-below#Replace this function with this code below":"function lib.notify(data)\n    local sound = settings.notification_audio and data.sound\n    data.sound = nil\n    exports['vzn-notify']:oxLibNotification(data)\n    if not sound then return end\n    if sound.bank then lib.requestAudioBank(sound.bank) end\n    local soundId = GetSoundId()\n    PlaySoundFrontend(soundId, sound.name, sound.set, true)\n    ReleaseSoundId(soundId)\n    if sound.bank then ReleaseNamedScriptAudioBank(sound.bank) end\nend"}},"/vzn-notify/Integration/qb-core":{"title":"QB-CORE INTEGRATION","data":{"":"To integrate vzn-notify with qb-core do steps below!","go-to-qb-coreclientfunctionslua#Go to qb-core/client/functions.lua":"","find-function-called-qbcorefunctionsnotify#Find function called QBCore.Functions.Notify":"","replace-this-function-with-this-code-below#Replace this function with this code below":"function QBCore.Functions.Notify(text, texttype, length, icon)\n    exports['vzn-notify']:qbCoreNotification(text, texttype, length)\nend"}},"/vzn-notify/api":{"title":"API","data":{"visibility#VISIBILITY":"To show / hide notifications (for example, some cinematic mode etc) you can use export\nexports['vzn-notify']:setVisible(visible)\nvisible: boolean\nsetting will change the visibility of notifications nui","add-notification#ADD NOTIFICATION":"To add new notification you have to use export\n---@class NotifyData\n---@field notifType? \"error\" | \"success\" | \"primary\" | \"warning\" | \"money\"\n---@field designType? 1 | 2 | 3 | 4\n---@field duration? number in miliseconds\n---@field title? string\n---@field message string\n---@type NotifyData\nlocal data = {\n    notifType = \"warning\",\n    title = \"Caution\",\n    duration = 3000,\n    message = \"Remember to join our discord and subscribe VZN Scripts on youtube\",\n}\nexports['vzn-notify']:addNotification(data)\ndata: NotifyData\nnotifType: error | success | primary | warning | money\nthe color of the notification\nif not setted -> primary\ndesignType?: 1 | 2 | 3 | 4\nthe design of the notification Preview\nif not setted -> default from Config\nduration?: number\ntime during which the notification will be visible (in miliseconds)\nif not setted -> default from Config\ntitle?: string\nthe title of the notification\nif not setted -> default from Config\nmessage: string\nmessage of the notification\nif not setted -> notification will not appear"}},"/vzn-notify/designs":{"title":"DESIGNS","data":{"":"In this script you can choose from 4 design types. In script they are represented by numbers from 1 to 4","1#1":"With left border and icon","2#2":"With icon and bottom progressbar showing remaining time","3#3":"With left border, icon and circular progressbar showing remaining time","4#4":"With left border and circular progressbar showing remaining time"}}}